{"version":3,"sources":["components/Loader/Loader.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","Api/apiVars.js","Api/apiService.js","components/default.jpg","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.jsx","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGalleryItem.module.css"],"names":["module","exports","API_KEY","BASE_URL","fetchArticles","text","a","page","axios","get","data","console","error","ImageGalleryItem","src","alt","onClick","className","styles","ImageGalleryItemImage","defaultProps","defaultImage","ImageGallery","images","onClickImg","map","id","webformatURL","largeImageURL","Searchbar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSearch","this","SearchForm","onSubmit","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","disabled","Component","Button","onLoadMore","Loader","color","height","width","timeout","Loading","Modal","handleEsc","keyCode","onClose","closeModal","currentTarget","window","addEventListener","removeEventListener","Overlay","children","INIT_STATE","App","searchQuery","isLoading","largeImage","totalPage","fetchImages","apiService","then","hits","prevState","totalHits","catch","finally","handleSearchQuery","query","handleLoadMore","toggleModal","img","prevProp","scrollTo","top","document","documentElement","scrollHeight","behavior","showModal","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3af6df27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__37Jc1\",\"Loading\":\"Loader_Loading__363Ow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3xBfB\",\"Modal\":\"Modal_Modal__26iSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Jnrl\"};","const API_KEY = '20347157-bf35dc9934e298cd0bab289fc';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst PER_PAGE = 12;\r\n\r\nexport { API_KEY, BASE_URL, PER_PAGE };","    /*\r\n     *  Окремий об'єкт apiService.js для виконання/збереження логіки    \r\n     *  REST-пагінація   \r\n     *  !!! отримати на цю адресу запит \r\n     *  https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12  \r\n     *  async \r\n     * \r\n     *  Фетч fetchArticles по пошуковому запросу\r\n     */\r\nimport axios from 'axios';\r\nimport { API_KEY, BASE_URL, PER_PAGE } from './apiVars';\r\n\r\nconst fetchArticles = async (text, page=1) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${BASE_URL}?key=${API_KEY}&q=${text}&page=${page}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\r\n        );    // звернення до GET-ера  \r\n\r\n        return data;\r\n               // Show error  \r\n    } catch (error) {\r\n        console.error('Something wrong with API search fetch: ' + error);\r\n    }\r\n};\r\n\r\nexport default { fetchArticles };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ВАРІАНТ без error */\r\n// import axios from 'axios';\r\n// import { API_KEY, BASE_URL, PER_PAGE } from './apiVars';\r\n\r\n// const fetchArticles = async (query, page) => {\r\n//   const url = `${BASE_URL}?key=${API_KEY}&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\r\n      \r\n//   const response = await axios.get(url);\r\n//   const data = response.data;\r\n\r\n//   return data;\r\n// }\r\n\r\n// export default { fetchArticles };\r\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","/* \r\n * Компонент елемента списка ImageGalleryItem з зображенням. \r\n * Створює DOM-елемент такої структури:\r\n */\r\n//import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from '../default.jpg';\r\nimport styles from './ImageGalleryItem.module.css';\r\n//import '../../styles.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt, onClick }) => {\r\n\r\n    return (\r\n        <li className={styles.ImageGalleryItem}>\r\n            <img className={styles.ImageGalleryItemImage}\r\n            src={src}\r\n            alt={alt}\r\n            onClick={onClick}\r\n        />\r\n     </li>\r\n    )\r\n};\r\n\r\n    ImageGalleryItem.propTypes = {\r\n        src: PropTypes.string.isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired\r\n    };\r\n  \r\n    ImageGalleryItem.defaultProps = {  \r\n        src: defaultImage,\r\n    };\r\n    \r\nexport { ImageGalleryItem };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    /* \r\n     *  on class \r\n     */\r\n// class ImageGalleryItem extends Component {\r\n//     handlePassId = ({ target: { id } }) => {\r\n//         const { onOpenModal } = this.props;\r\n//         onOpenModal(id);\r\n//     };\r\n\r\n//     render() {\r\n//       const { images } = this.props;\r\n//       return (\r\n//         images.map(image => (\r\n//             <li className=\"ImageGalleryItem\">\r\n//                <img src=\"\"\r\n//                     alt=\"\"\r\n//                     className=\"ImageGalleryItem-image\" />\r\n//             </li>\r\n//       )));\r\n//     }    \r\n// }\r\n\r\n//     ImageGalleryItem.propTypes = {\r\n//         images: PropTypes.arrayOf(\r\n//             PropTypes.shape({\r\n//                 imageId: PropTypes.number.isRequired,\r\n//                 linkSmallImage: PropTypes.string.isRequired\r\n//             })\r\n//         ).isRequired,\r\n//         onOpenModal: PropTypes.func.isRequired\r\n//     };\r\n  \r\n// export default ImageGalleryItem;","/*\r\n * Список карток зображень. \r\n * Створює DOM-елемент такої структури.\r\n * \r\n *      `id` - унікальний ідентифікатор\r\n *      `webformatURL` - посилання на маленьке зображення для списку карток\r\n *      `largeImageURL` - посилання на велике зображення для модального вікна \r\n */\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from '../default.jpg';\r\nimport { ImageGalleryItem } from './ImageGalleryItem';\r\n//import apiService from '../Api/apiService';\r\n//import '../../styles.css';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGallery = ({ images, onClickImg }) => (\r\n    <ul className={styles.ImageGallery}>\r\n        \r\n        {images.map(({ id, webformatURL, largeImageURL }) => {\r\n            \r\n            return (\r\n                <ImageGalleryItem key={id} src={webformatURL} alt=\"There is a picture\" onClick={() => onClickImg(largeImageURL)} />\r\n            )\r\n        })}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    onClickImg: PropTypes.func.isRequired\r\n};\r\n\r\nImageGallery.defaultProps = {  \r\n    webformatURL: defaultImage,\r\n    largeImageURL: defaultImage,\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ImageGallery extends Component {\r\n\r\n//     listRef = createRef();\r\n\r\n//     componentDidUpdate(prevProps) {\r\n//         const { current } = this.listRef;\r\n\r\n//         if (current && prevProps.images !== this.props.images) {\r\n//             const scrollToElem =\r\n//                 apiService.page * apiService.perPage - apiService.perPage;\r\n//             if (!scrollToElem) return;\r\n//             current.children[scrollToElem].scrollIntoView({\r\n//                 behavior: \"smooth\",\r\n//                 block: \"start\",\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n                    // const ImageGallery = ({ items, onModalCall }) => {\r\n                    //     return (\r\n                    //         <ul className=\"ImageGallery\" >\r\n                    //             {items.map(({ id, webformatURL, tags }) => (\r\n                    //                 <ImageGalleryItem \r\n                    //                     key={id}          //- `id` - унікальний ідентифікатор\r\n                    //                     img={webformatURL} //- `webformatURL` - посилання на маленьке зображення для списку карток\r\n                    //                     onLarge={() => onModalCall(id)} //- `largeImageURL` - посилання на велике зображення для модального вікна\r\n                    //                     tags={tags}      \r\n                    //                 />\r\n                    //             ))}\r\n                    //         </ul>\r\n                    //     );\r\n                    // };\r\n\r\n                    // ImageGallery.propTypes = {\r\n                    //     items:PropTypes.arrayOf(\r\n                    //         PropTypes.shape({\r\n                    //             id: PropTypes.string,\r\n                    //             webformatURL: PropTypes.string,\r\n                    //             tags: PropTypes.string,\r\n                    //     }),\r\n                    // ),\r\n                    // };\r\n                    \r\n                    // export default ImageGallery;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /* \r\n      *  on class \r\n      */\r\n// import React, { Component } from \"react\";\r\n// import PropTypes from 'prop-types';\r\n// import ImageGalleryItem from './ImageGalleryItem';\r\n// import apiService from '../Api/apiService';\r\n// //import styles from \"./ContactForm.module.css\";\r\n// import './styles.css';\r\n\r\n// class ImageGallery extends Component {\r\n\r\n//     listRef = createRef();\r\n\r\n//     componentDidUpdate(prevProps) {\r\n//         const { current } = this.listRef;\r\n\r\n//         if (current && prevProps.images !== this.props.images) {\r\n//             const scrollToElem =\r\n//                 apiService.page * apiService.perPage - apiService.perPage;\r\n//             if (!scrollToElem) return;\r\n//             current.children[scrollToElem].scrollIntoView({\r\n//                 behavior: \"smooth\",\r\n//                 block: \"start\",\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const { images, onModalOpen } = this.props;\r\n//         const listItem = images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n//             <ImageGalleryItem\r\n//                 key={id}           //- `id` - унікальний ідентифікатор\r\n//                 src={webformatURL} //- `webformatURL` - посилання на маленьке зображення для списку карток\r\n//                 onModalOpen={() => onModalOpen(largeImageURL)} //- `largeImageURL` - посилання на велике зображення для модального вікна\r\n//                 alt={tags}\r\n//             />\r\n//         ));\r\n\r\n//         return (\r\n//             <ul className=\"ImageGallery\">\r\n//                 <ImageGalleryItem images={images} onOpenModal={onOpenModal} />>\r\n//             </ul>\r\n//         );\r\n//     }\r\n// }\r\n\r\n//     ImageGallery.propTypes = {\r\n//         images: PropTypes.array.isRequired,\r\n//         onOpenModal: PropTypes.func.isRequired\r\n//     };\r\n   \r\n// export default ImageGallery;","/*    Рядок пошуку   Searchbar\r\n *  Компонент приймає один проп `onSubmit` - функцію для передачі\r\n *  значення інпут при сабміті форми /проверки (валидации) формы перед отправкой на сервер/. \r\n *  Створює DOM-елемент такої структури. \r\n */\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Searchbar.module.css';\r\n//import \"../../styles.css\";\r\n\r\n//export default class Searchbar extends Component {\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSearch(this.state.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={value}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            disabled={this.props.disabled}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n  Searchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default Searchbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Searchbar = ({ onSubmit }) => (\r\n\r\n//       //Створює DOM-елемент такої структури\r\n//       <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n//           <button type=\"submit\" className=\"SearchForm-button\">\r\n//             <span className=\"SearchForm-button-label\">Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//               name=\"search\"\r\n//             className=\"SearchForm-input\"\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n  \r\n//   Searchbar.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired\r\n//   };\r\n\r\n// export default Searchbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /* \r\n      *  on class \r\n      */\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     queryString: \"\"\r\n//     //searchQuery: \"\"\r\n//   };\r\n\r\n//   //Створює DOM-елемент такої структури\r\n//   render() {\r\n//     return (\r\n//       <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\">\r\n//           <button type=\"submit\" className=\"SearchForm-button\">\r\n//             <span className=\"SearchForm-button-label\">Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             className=\"SearchForm-input\"\r\n//             type=\"text\"\r\n//             autocomplete=\"off\"\r\n//             autofocus\r\n//             placeholder=\"Search images and photos\"\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n//   /* определения propTypes  внутри класса Searchbar - ключевоe словo static*/\r\n//   // static propTypes = {\r\n//   // onSubmit: PropTypes.func.isRequired\r\n//   // };\r\n// };\r\n// /* Визначення propTypes зовні класу Searchbar */\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired\r\n// };\r\n\r\n// export default Searchbar;","\r\nimport PropTypes from \"prop-types\";\r\n//import \"../../styles.css\";\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onLoadMore }) => (\r\n\r\n  <button type=\"button\" className={styles.Button} onClick={onLoadMore}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired\r\n};\r\n\r\nexport { Button };\r\n\r\n","import LoaderSpinner from \"react-loader-spinner\";\r\n  // import { styled } from 'react-jss';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <LoaderSpinner\r\n        type=\"Watch\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n      />\r\n      <span className={styles.Loading}>Loading ...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n\r\n","     \r\n     /*\r\n      *  on class \r\n      */\r\nimport React, { Component } from \"react\";\r\n//import PropTypes from \"prop-types\";\r\nimport styles from './Modal.module.css';\r\n\r\n\r\n\r\nclass Modal extends Component {\r\n//export default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleEsc)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleEsc)\r\n  }\r\n\r\n  handleEsc = e => {\r\n    if (e.keyCode === 27 ) {  //\"Escape\"\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  closeModal = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Overlay} onClick={this.closeModal}>\r\n        <div className={styles.Modal}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Modal extends Component {\r\n \r\n//         componentDidMount() {\r\n//           window.addEventListener(\"keydown\", this.handleCloseModalEsc);\r\n//         //console.log(\"componentDidMount()\");\r\n//         }\r\n\r\n//         componentWillUnmount() {\r\n//           window.removeEventListener(\"keydown\", this.handleCloseModalEsc);\r\n//          // console.log(\"componentDidUnmount()\");\r\n//         }\r\n  \r\n//   handleCloseModalEsc = ({ keyCode }) => {\r\n//     if (keyCode === 27 ) {\r\n//       this.props.onCloseModal();\r\n//     }\r\n//   };\r\n//   handleBackdropClick = (event) => {\r\n//     if (event.currentTarget !== event.target)\r\n//       this.props.onCloseModal();\r\n//   };\r\n\r\n//   render() {\r\n//     // const { images, imgId, onCloseModal } = this.props;\r\n//     // const { largeImageURL } = this.props;\r\n//     return (\r\n//       <div className=\"Overlay\" onClick={this.props.onCloseModal}>\r\n//         <div className=\"Modal\" >\r\n//           <img src={this.props.largeImage} alt=\"\" />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// /* Визначення propTypes зовні класу Modal */\r\n//   Modal.propTypes = {\r\n//     images: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         imageId: PropTypes.number.isRequired,\r\n//         largeImageURL: PropTypes.string.isRequired\r\n//       })\r\n//     ).isRequired,\r\n//     imgId: PropTypes.string.isRequired,\r\n//     onCloseModal: PropTypes.func.isRequired\r\n//   };\r\n\r\n\r\n// export default Modal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import PropTypes from \"prop-types\";\r\n// import \"./styles.css\";\r\n\r\n// const Modal = ({ largeImageURL, tag }) => {\r\n  \r\n//   //       componentDidMount() {\r\n//   //         window.addEventListener(\"keydown\", this.handleCloseModalEsc);\r\n//   // }\r\n\r\n//   //       componentWillUnmount() {\r\n//   //         window.removeEventListener(\"keydown\", this.handleCloseModalEsc);\r\n//   //       }\r\n  \r\n//   handleCloseModalEsc = ({ keyCode }) => {\r\n//     if (keyCode === 27 ) {\r\n//       this.props.onCloseModal();\r\n//     }\r\n//   };\r\n//   handleBackdropClick = (event) => {\r\n//     if (event.currentTarget !== event.target)\r\n//       this.props.onCloseModal();\r\n//   };\r\n\r\n//   // render() {\r\n//   //   const { images, imgId, onCloseModal } = this.props;\r\n//   //   //const { largeImageURL } = findImg(images, +imgId);\r\n//   //   const { largeImageURL } = this.props;\r\n//     return (\r\n//       <div className=\"Overlay\">\r\n//         <div className=\"Modal\" onClick={onCloseModal}>\r\n//           <img src={largeImageURL} alt={tag} />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   // }\r\n// };\r\n\r\n// /* Визначення propTypes зовні  Modal */\r\n//   Modal.propTypes = {\r\n//     largeImageURL: PropTypes.string.isRequired,\r\n//     tag: PropTypes.string.isRequired,\r\n//     onCloseModal: PropTypes.func.isRequired\r\n//   };\r\n\r\n// export { Modal };","import React, { Component } from 'react';\r\nimport apiService from './Api/apiService';\r\nimport { PER_PAGE } from './Api/apiVars';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport { Button }  from \"./components/Button/Button\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport './styles.css';\r\n\r\nconst INIT_STATE = {\r\n    page: 1,\r\n    images: []\r\n};\r\n  \r\nclass App extends Component {\r\n  state = {\r\n    ...INIT_STATE,\r\n    searchQuery: '',\r\n    isLoading: false, \r\n    largeImage: '',   \r\n    //  error: null,\r\n    totalPage: 0      \r\n  };\r\n\r\n  componentDidMount() { \r\n    const { query } = this.state;\r\n\r\n    // this.setState({ isLoading: true });\r\n    // this.fetchImages(query);\r\n  }\r\n  componentDidUpdate(prevProp, prevState) {\r\n    /* \r\n     *   Sending query\r\n     */\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    /* \r\n     *   Scroll to bottom page\r\n     */\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n    if (prevPage !== nextPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ isLoading: true })\r\n    apiService.fetchArticles(searchQuery, page)\r\n      .then(data => {\r\n        const images = data.hits;\r\n\r\n        return this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          page: prevState.page + 1,\r\n          totalPage: data.totalHits - PER_PAGE * this.state.page\r\n        }))\r\n      },\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n\r\n  handleSearchQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      totalPage: 0,\r\n       ...INIT_STATE  \r\n    })\r\n  }\r\n\r\n  handleLoadMore = () => {\r\n    this.fetchImages();\r\n  }\r\n\r\n  toggleModal = (img = '') => {\r\n    this.setState({\r\n      largeImage: img\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { images, isLoading, totalPage, showModal, largeImage } = this.state;\r\n    \r\n    return (\r\n      <div>\r\n                {/* Search image */}\r\n        <Searchbar onSearch={this.handleSearchQuery} disabled={showModal} />\r\n\r\n                {/* Show error */}\r\n        {/* {error && <p>Whoops, something went wrong: {error.message}</p>} */}\r\n\r\n                {/* Show image gallery */}\r\n        {images.length > 0 && <ImageGallery images={images} onClickImg={this.toggleModal} />}\r\n\r\n                {/* Show loader when downloading data */}\r\n        {isLoading && <Loader />}\r\n\r\n                {/* Show button-more after request */}\r\n        {totalPage > 0 && <Button onLoadMore={this.handleLoadMore} />}\r\n\r\n                {/* Show a large image in the modal */}\r\n        {largeImage && <Modal onClose={this.toggleModal}>\r\n                          <img src={largeImage} alt=\"\" />\r\n                       </Modal>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const INIT_STATE = {\r\n//   page: 1,\r\n//   images: []\r\n// };\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     ...INIT_STATE,\r\n//     searchQuery: '',\r\n//     loading: false,\r\n//     largeImg: '',\r\n//     // error: null,\r\n//     total: 0      \r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const prevQuery = prevState.searchQuery;\r\n//     const nextQuery = this.state.searchQuery;\r\n//     if (nextQuery !== prevQuery) {\r\n//       this.fetchImages();\r\n//     }\r\n//   }\r\n\r\n//   fetchImages = () => {\r\n//     if (!this.state.searchQuery) {\r\n//       return;\r\n//     }\r\n//     this.setState({ loading: true });\r\n   \r\n//     apiService\r\n//       .fetchArticles(this.state.searchQuery, this.state.page)\r\n//       .then(({ items, total }) => {\r\n//        // this.setState((prevState) => ({ images: [...prevState.images, ...items], total, page: prevState.page + 1 }));\r\n//         this.setState((prevState) => ({ images: [...prevState.images, ...items], total, page: prevState.page + 1 }));\r\n//       })\r\n//       // .catch((error) => {\r\n//       //   this.setState({ error });\r\n//       //   toast.error('Error as:', error.message);\r\n//       // })\r\n//       .finally(() => {\r\n//         this.setState({ loading: false });\r\n        \r\n//         window.scrollTo({\r\n//           top: document.documentElement.scrollHeight,\r\n//           behavior: 'smooth',\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   handleSearchSubmit = (query) => {\r\n//     this.setState({ searchQuery: query, page: 1, images: [] });\r\n//   };\r\n\r\n//   handleModalCall = (id) => {\r\n//     this.setState({ largeImg: this.state.images.find((img) => img.id === id).largeImageURL });\r\n//   };\r\n\r\n//   handleModalClick = (e) => {\r\n//     if (e.target !== e.currentTarget) {\r\n//       return;\r\n//     }\r\n//     this.handleModalClose();\r\n//   };\r\n\r\n//   handleModalClose = () => {\r\n//     this.setState({ largeImg: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { images, loading, total, largeImg } = this.state;\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Searchbar onSubmit={this.handleSearchSubmit} />\r\n//         <ImageGallery items={images} onModalCall={this.handleModalCall} />\r\n//         {loading\r\n//           ? (<Loader />)\r\n//           : (total > 12 && !loading && <Button onMore={this.fetchImages} />)\r\n//         }\r\n//         {largeImg && <Modal largeImage={largeImg} onClose={this.handleModalClose} onClick={this.handleModalClick} />}\r\n        \r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const mapState = images => {\r\n//   return images.map(\r\n//     ({\r\n//       id: imageId,\r\n//       webformatURL: linkSmallImage,\r\n//       largeImageURL: linkLargeImage\r\n//     }) => ({\r\n//       imageId,\r\n//       linkSmallImage,\r\n//       linkLargeImage\r\n//     })\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class App extends Component {\r\n//   state = {\r\n//     images: [],\r\n//     searchQuery: '',\r\n//     page: 1,\r\n//     totalPage: 0,\r\n//     isLoading: false,\r\n//     error: null,\r\n//     largeImage: ''\r\n//   };\r\n\r\n//   componentDidMount() { }\r\n\r\n//   componentDidUpdate(prevProp, prevState) {\r\n//     // Sending query\r\n//     const prevQuery = prevState.searchQuery;\r\n//     const nextQuery = this.state.searchQuery;\r\n\r\n//     if (prevQuery !== nextQuery) {\r\n//       this.fetchImages();\r\n//     }\r\n\r\n//     // Scroll to bottom page\r\n//     const prevPage = prevState.page;\r\n//     const nextPage = this.state.page;\r\n//     if (prevPage !== nextPage) {\r\n//       window.scrollTo({\r\n//         top: document.documentElement.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   fetchImages = () => {\r\n//     const { searchQuery, page } = this.state;\r\n\r\n//     this.setState({ isLoading: true })\r\n//     apiService.getImages(searchQuery, page)\r\n//       .then(data => {\r\n//         const images = data.hits;\r\n\r\n//         return this.setState(prevState => ({\r\n//           images: [...prevState.images, ...images],\r\n//           page: prevState.page + 1,\r\n//           totalPage: data.totalHits - 12 * this.state.page\r\n//         }))\r\n//       },\r\n//       )\r\n//       .catch(error => this.setState({ error }))\r\n//       .finally(() => this.setState({ isLoading: false }));\r\n//   }\r\n\r\n//   handleSearchQuery = query => {\r\n//     this.setState({\r\n//       searchQuery: query,\r\n//       page: 1,\r\n//       images: [],\r\n//       totalPage: 0\r\n//     })\r\n//   }\r\n\r\n//   handleLoadMore = () => {\r\n//     this.fetchImages();\r\n//   }\r\n\r\n//   toggleModal = (img = '') => {\r\n//     this.setState({\r\n//       largeImage: img\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     const { images, isLoading, error, totalPage, showModal, largeImage } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         {/* Search image */}\r\n//         <Searchbar onSearch={this.handleSearchQuery} disabled={showModal} />\r\n\r\n//         {/* Show error */}\r\n//         {error && <p>Whoops, something went wrong: {error.message}</p>}\r\n\r\n//         {/* Show image gallery */}\r\n//         {images.length > 0 && <ImageGallery images={images} onClickImg={this.toggleModal} />}\r\n\r\n//         {/* Show loader when downloading data */}\r\n//         {isLoading && <Loader />}\r\n\r\n//         {/* Show button-more after request */}\r\n//         {totalPage > 0 && <Button onLoadMore={this.handleLoadMore} />}\r\n\r\n//         {/* Show a large image in the modal */}\r\n//         {largeImage && <Modal onClose={this.toggleModal}>\r\n//           <img src={largeImage} alt=\"\" />\r\n//         </Modal>}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2d4si\",\"SearchForm\":\"Searchbar_SearchForm__1_iHc\",\"SearchFormButton\":\"Searchbar_SearchFormButton__23JjL\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__wxgwD\",\"SearchFormInput\":\"Searchbar_SearchFormInput__29gMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGalleryItem_ImageGallery__19dvd\",\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__19Zhd\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3bY50\"};"],"sourceRoot":""}